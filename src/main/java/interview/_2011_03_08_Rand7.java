 package interview;

import java.util.Random;

/*
 * rand5()는 1~5 범위의 정수를 모두 같은 확률로 리턴한다.
 * rand5()를 사용하여 rand7()을 구현하라.
 * rand7()은 1~7 범위의 정수를 모두 같은 확률로 리턴한다.
 */
public class _2011_03_08_Rand7 {
	public static int rand7() {
		while(true)
		{
			int n = 5*(rand5()-1)+rand5()-1;
			if(n<21)
				return (n%7)+1;
		}		
	}
	
	private static int rand5() {
		Random rand = new Random();
		return rand.nextInt(5)+1;
	}
}

/*
 * rand5() 로 rand7()을 만들려면 어떻게 해야할까.
 * 1~7을 같은 확률로 만들어야 하는 것이 문제다.
 * 그렇다면 1~5 범위의 수를 적절히 뻥튀기 하여 %7 + 1 을 하면 될텐데..
 * 뻥튀기한 결과의 숫자범위가 7의 배수가 되어야 확률이 모두 같아진다.
 * 그러나 이것은 불가능하다.
 * 우선 뻥튀기를 위해 rand5()에 k 를 곱한뒤 ( 그러면 숫자가 1k 2k 3k 4k 5k 가 나온다 )
 * 각 숫자간 빈 간격을 매우기 위해 1~k(0~k-1이 될수도 있고 offset은 하기나름)를 더해줘야 한다.
 * 그런데 1~k 의 연속된 정수를 만들수 있는 방법이 따로 없다. 아니, k는 5밖에 불가능하다.
 * 5k + 5 가 되는데 이것은 5의 배수이다. 이짓을 몇번 반복해도 마찬가지다..
 * 그러므로 어쩔수 없이 적절히 7의 배수 범위로 잘라내야 한다.
 * 솔루션에서는 5(rand5()-1) + rand5()-1 을 계산하여 수의 범위를 0~24로 만들고
 * 0~20 범위의 수만 택하여 강제로 7의 배수를 만든다.
 * (0~24 범위의 수는 나올 확률이 모두 같다)
 * 문제는 무한루프에 빠지지 않는다는 보장이 없다는 것인데 어쩔수가 없다-_-;
 */
